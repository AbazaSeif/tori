<?xml version="1.0" encoding="UTF-8"?>
<project name="Tori">
	
	<property name="dir.project" value=".."/>
	<property name="dir.common" value="${dir.project}/common" />
	<property name="dir.webapp" value="${dir.project}/webapp" />
	<property name="dir.ds.test" value="${dir.project}/ds-test" />
	<property name="dir.ds.liferay" value="${dir.project}/ds-liferay" />
	
	<property name="dir.build-artifacts" value="artifacts" />
	<property name="dir.build-artifacts.common" value="${dir.build-artifacts}/common" />
	<property name="dir.build-artifacts.webapp" value="${dir.build-artifacts}/webapp" />
	<property name="dir.build-artifacts.tests" value="${dir.build-artifacts}/tests" />
	<property name="dir.build-artifacts.widgetsets" value="${dir.build-artifacts}/widgetsets" />
	<property name="dir.build-artifacts.ds.liferay" value="${dir.build-artifacts}/ds-liferay" />
	<property name="dir.build-artifacts.ds.test" value="${dir.build-artifacts}/ds-test" />
	<property name="dir.build-artifacts.test-reports" value="${dir.build-artifacts}/test-reports" />
	
	<property name="dir.meta-inf" value="${dir.webapp}/src/main/webapp/META-INF" />
	<property name="dir.web-inf" value="${dir.webapp}/src/main/webapp/WEB-INF" />
	<property name="dir.web-inf.lib" value="${dir.web-inf}/lib" />
	
	<property name="file.common.jar" value="${dir.build-artifacts}/common.jar" />
	<property name="file.webapp.jar" value="${dir.build-artifacts}/webapp.jar" />
	<property name="file.ds.liferay.jar" value="${dir.build-artifacts}/ds-liferay.jar" />
	<property name="file.ds.test.jar" value="${dir.build-artifacts}/ds-test.jar" />
	<property name="file.findbugs-ant.jar" value="build-libs/findbugs/findbugs-ant.jar" />
	
	<property name="file.junit.jar" value="build-libs/junit-4.10.jar" />
	<property name="file.mockito.jar" value="build-libs/mockito-all-1.8.5.jar" />
	<property name="class.testsuite.webapp" value="org.vaadin.tori.WebappTestSuite" />
	<property name="class.testsuite.common" value="org.vaadin.tori.CommonTestSuite" />
	
	<property name="file.tori.liferay.war" value="${dir.build-artifacts}/tori-liferay.war" />
	<property name="file.tori.test.war" value="${dir.build-artifacts}/tori-test.war" />

	<!-- FINDBUGS -->
	<property name="findbugs.home" value="build-libs/findbugs"/>
	<taskdef name="findbugs" classname="edu.umd.cs.findbugs.anttask.FindBugsTask"
		classpath="${file.findbugs-ant.jar}"
	/>
	
	<path id="common-classpath">
		<fileset dir="${dir.common}/lib">
		    <include name="*.jar" />
		</fileset>
		<fileset dir="build-libs/findbugs">
			<include name="annotations.jar"/>
		</fileset>
	</path>
	
	<path id="webapp-classpath">
		<path refid="common-classpath"/>
		<pathelement location="${file.common.jar}"/>
		<fileset dir="${dir.web-inf.lib}" includes="**/*.jar"/>
		<fileset dir="${dir.webapp}/lib" includes="**/*.jar"/>
	</path>

	<path id="ds-liferay-classpath">
		<path refid="common-classpath"/>
		<pathelement location="${file.common.jar}"/>
		<fileset dir="${dir.ds.liferay}/lib">
		    <include name="*.jar" />
		</fileset>
	</path>

	<path id="ds-test-classpath">
		<path refid="common-classpath"/>
		<pathelement location="${file.common.jar}"/>
	</path>

	<path id="test-classpath">
		<pathelement location="${file.junit.jar}"/>
		<pathelement location="${file.mockito.jar}"/>
	</path>
	
	<target name="clean">
		<delete dir="${dir.build-artifacts}"/>
	</target>

	<target name="-package-common-jar">
		<mkdir dir="${dir.build-artifacts.common}"/>
    	<javac srcdir="${dir.common}/src/main"
         	destdir="${dir.build-artifacts.common}"
    		classpathref="common-classpath"
         	debug="on"
    		includeantruntime="false"
		/>
		<jar destfile="${file.common.jar}"
			basedir="${dir.build-artifacts.common}"
		/>
	</target>
	
	
    <target name="-package-webapp-jar" depends="-package-common-jar, -package-ds-test-jar">
    	<mkdir dir="${dir.build-artifacts.webapp}"/>
    	<javac srcdir="${dir.webapp}/src/main"
         	destdir="${dir.build-artifacts.webapp}"
    		classpathref="webapp-classpath"
         	debug="on"
			includeantruntime="false"
		/>
    	<copy todir="${dir.build-artifacts.webapp}">
    		<fileset
    			dir="${dir.webapp}/src/main/java"
    			includes="**/*.js"
    		/>
    	</copy>
		<jar destfile="${file.webapp.jar}"
			basedir="${dir.build-artifacts.webapp}"
		/>
    </target>
	
    <target name="-package-ds-liferay-jar" depends="-package-common-jar">
    	<mkdir dir="${dir.build-artifacts.ds.liferay}"/>
    	<javac srcdir="${dir.ds.liferay}/src/main"
         	destdir="${dir.build-artifacts.ds.liferay}"
    		classpathref="ds-liferay-classpath"
         	debug="on"
    		includeantruntime="false"
		/>
		<!-- copy resources -->
		<copy todir="${dir.build-artifacts.ds.liferay}">
			<fileset dir="${dir.ds.liferay}/src/main/resources" />
		</copy>
		<jar destfile="${file.ds.liferay.jar}"
			basedir="${dir.build-artifacts.ds.liferay}"
		/>
    </target>

    <target name="-package-ds-test-jar" depends="-package-common-jar">
    	<mkdir dir="${dir.build-artifacts.ds.test}"/>
    	<javac srcdir="${dir.ds.test}/src/main"
         	destdir="${dir.build-artifacts.ds.test}"
    		classpathref="ds-test-classpath"
         	debug="on"
    		includeantruntime="false"
		/>
		<!-- copy resources -->
		<copy todir="${dir.build-artifacts.ds.test}">
			<fileset dir="${dir.ds.test}/src/main/resources" />
		</copy>
		<jar destfile="${file.ds.test.jar}"
			basedir="${dir.build-artifacts.ds.test}"
		/>
    </target>

	<target name="package-liferay-war" depends="-check-widgetset-dependency, -package-webapp-jar, -package-ds-liferay-jar, test-all">
		<war destfile="${file.tori.liferay.war}" webxml="${dir.web-inf}/web-liferay.xml" manifest="${dir.meta-inf}/MANIFEST.MF">
			<webinf dir="${dir.web-inf}">
				<exclude name="**/portlet.jar"/>
			</webinf>
			<metainf dir="${dir.meta-inf}"/>
			<lib file="${file.common.jar}" />
			<lib file="${file.ds.liferay.jar}" />
			<lib file="${file.webapp.jar}" />
			<lib file="${dir.common}/lib/guava-10.0.1.jar"/>
			<!-- liferay has its own config setup
			<classes file="${dir.webapp}/src/main/resources/log4j.properties"/>
			-->
			<zipfileset dir="${dir.build-artifacts.widgetsets}"
				includes="org.*/**"
				prefix="VAADIN/widgetsets"
			/>
			<!-- see http://dev.vaadin.com/ticket/4191 before modifying this -->
			<zipfileset dir="${dir.webapp}/src/main/webapp"
				includes="VAADIN/themes/**"
			/>
		</war>
	</target>
	
	<target name="package-test-war" depends="-check-widgetset-dependency, -package-webapp-jar, -package-ds-test-jar, test-all">
		<war destfile="${file.tori.test.war}" webxml="${dir.web-inf}/web.xml" manifest="${dir.meta-inf}/MANIFEST.MF">
			<webinf 
				dir="${dir.web-inf}"
				excludes="liferay-*, portlet.xml"
			/>
			<metainf dir="${dir.meta-inf}"/>
			<lib dir="${dir.web-inf.lib}" includes="*.jar"/>
			<lib file="${file.common.jar}" />
			<lib file="${file.ds.test.jar}" />
			<lib file="${file.webapp.jar}" />
			<lib file="${dir.ds.test}/lib/eclipselink.jar"/>
			<lib file="${dir.ds.test}/lib/mysql-connector-java-5.1.10-bin.jar"/>
			<lib file="${dir.common}/lib/guava-10.0.1.jar"/>
			<lib file="${dir.common}/lib/javax.persistence_2.0.3.v201010191057.jar"/>
			<zipfileset dir="${dir.build-artifacts.widgetsets}"
				includes="org.*/**"
				prefix="VAADIN/widgetsets"
			/>
			<zipfileset dir="${dir.webapp}/src/main/webapp"
				includes="VAADIN/themes/**"
			/>
		</war>
	</target>
	
	<target name="-compile-all-tests" depends="-package-webapp-jar, -package-common-jar">
		<mkdir dir="${dir.build-artifacts.tests}"/>
    	<javac srcdir="${dir.webapp}/src/test"
         	destdir="${dir.build-artifacts.tests}"
         	debug="on"
			includeantruntime="false">
    		<classpath>
    			<path refid="test-classpath"/>
    			<path refid="webapp-classpath"/>
    			<path location="${file.webapp.jar}"/>
    		</classpath>
    	</javac>
		<javac srcdir="${dir.common}/src/test"
         	destdir="${dir.build-artifacts.tests}"
         	debug="on"
			includeantruntime="false">
    		<classpath>
    			<path refid="test-classpath"/>
    			<path refid="common-classpath"/>
    			<path location="${file.common.jar}"/>
    		</classpath>
    	</javac>
	</target>
	
	<target name="test-webapp" depends="-compile-all-tests">
		<mkdir dir="${dir.build-artifacts.test-reports}"/>
		<junit fork="yes" haltonfailure="yes">
			<test name="${class.testsuite.webapp}" outfile="${dir.build-artifacts.test-reports}/webapp"></test>
			<formatter type="xml"/>
			<classpath>
				<path refid="test-classpath"/>
				<path refid="webapp-classpath"/>
				<path location="${file.webapp.jar}"/>
				<pathelement path="${dir.build-artifacts.tests}"/>
			</classpath>
		</junit>
	</target>
	
	<target name="test-common" depends="-compile-all-tests">
		<mkdir dir="${dir.build-artifacts.test-reports}"/>
		<junit fork="yes" haltonfailure="yes">
			<test name="${class.testsuite.common}" outfile="${dir.build-artifacts.test-reports}/common"></test>
			<formatter type="xml"/>
			<classpath>
				<path refid="test-classpath"/>
				<path refid="common-classpath"/>
				<path location="${file.common.jar}"/>
				<pathelement path="${dir.build-artifacts.tests}"/>
			</classpath>
		</junit>
	</target>
	
	<target name="test-all" depends="test-webapp, test-common"></target>
	
	<target name="-check-widgetset-dependency">
		<available file="${dir.build-artifacts.widgetsets}" property="widgetsetIsPresent" />
		<fail 
			unless="widgetsetIsPresent"
			message="No compiled widgetset artifact was found in ${dir.build-artifacts.widgetsets}. Try running 'compile-widgetset' first."
		/>
	</target>
	
	<!-- WIDGETSET COMPILATION STUFF! -->
	<!-- Ignore, mostly.              -->
	
	<target name="-configure">
		
		<!-- Path from this file to the project root -->
		<property name="base" 
			      value="${dir.webapp}" />
		
		<!-- Location of project source code -->
		<property name="src-location" 
			      value="${dir.webapp}/src/main/java" />

		<!-- Target where to compile server-side classes -->
		<property name="server-side-destination" 
			      value="${dir.build-artifacts.webapp}"/>
		
		<!-- Target where to compile the widget set -->
		<property name="client-side-destination" 
			      value="${dir.build-artifacts.widgetsets}" />
	</target>
		
    <!-- NOTE: Modify this example to compile your own widgetset -->
    <target name="-configure-widgetset">
        <!-- Name of the widget set -->
        <property name="widgetset" value="org.vaadin.tori.widgetset.ToriWidgetset"/>

        <!-- Path to the widgetset directory. Required only for --> 
    	<!-- generated widget sets. Must be relative to         --> 
    	<!-- $src-location, that is, under the first entry in   --> 
    	<!--  class path.                                       --> 
        <property name="widgetset-path" value="org/vaadin/tori/widgetset"/>
    </target>

	<!-- ================================================== -->
	<!-- Build Targets                                      -->
    <!-- ================================================== -->
	
	<target name="-init" depends="-configure">

		<echo>Output will be written into ${client-side-destination}</echo>

		<!-- Construct and check classpath -->
		<!-- Includes paths required for both server and client-side compilation -->
		<path id="compile.classpath">
			<!-- The source location must be first, as required by generate-widgetset. -->
            <pathelement path="${src-location}" />
			<pathelement path="${server-side-destination}" />
			<fileset dir="build-libs">
				<include name="validation-api-*.jar"/>
			</fileset>
		    <fileset dir="${dir.web-inf.lib}">
		    	<include name="*.jar"/>
		     </fileset>
			<fileset dir="${dir.webapp}/lib">
				<include name="*.jar"/>
			</fileset>
		</path>
		
		<pathconvert pathsep="${line.separator} * "
			property="echo.compile.classpath"
			refid="compile.classpath"
		/>
		<echo message="${line.separator}compile.classpath:"/>
		<echo message=" * ${echo.compile.classpath}"/>

		<pathconvert pathsep="${line.separator} * "
			property="echo.common-classpath"
			refid="common-classpath"
		/>
		<echo message="${line.separator}common-classpath:"/>
		<echo message=" * ${echo.common-classpath}"/>
	
		<pathconvert pathsep="${line.separator} * "
			property="echo.webapp-classpath"
			refid="webapp-classpath"
		/>
		<echo message="${line.separator}webapp-classpath:"/>
		<echo message=" * ${echo.webapp-classpath}"/>

		<pathconvert pathsep="${line.separator} * "
			property="echo.ds-liferay-classpath"
			refid="ds-liferay-classpath"
		/>
		<echo message="${line.separator}ds-liferay-classpath:"/>
		<echo message=" * ${echo.ds-liferay-classpath}"/>
			
		<pathconvert pathsep="${line.separator} * "
			property="echo.ds-test-classpath"
			refid="ds-test-classpath"
		/>
		<echo message="${line.separator}ds-test-classpath:"/>
		<echo message=" * ${echo.ds-test-classpath}"/>
		
		<pathconvert pathsep="${line.separator} * "
			property="echo.test-classpath"
			refid="test-classpath"
		/>
		<echo message="${line.separator}test-classpath:"/>
		<echo message=" * ${echo.test-classpath}"/>
	</target>

	<!-- Build the widget set. -->
	<target name="compile-widgetset" depends="-init, -configure-widgetset, -package-webapp-jar">
		<echo >Compiling ${widgetset}...</echo>
		<java classname="com.google.gwt.dev.Compiler"
			  failonerror="yes" fork="yes">
			<arg value="-war" />
			<arg value="${client-side-destination}" />
			<arg value="${widgetset}" />
			<arg value="-localWorkers" />
			<arg value="2" />
			<arg value="-logLevel"/>
			<arg value="TRACE"/>
			<arg value="-strict"/>
            <jvmarg value="-Xmx2048M"/>
            <jvmarg value="-Xss1024M"/>
            <jvmarg value="-Djava.awt.headless=true"/>
			<classpath>
				<path refid="compile.classpath"/>
			</classpath>
		</java>
	</target>
	
	
	<!-- FINDBUGS -->
		
	<target name="findbugs" depends="clean">
		<antcall target="-findbugs-common" inheritall="no"/>
		<antcall target="-findbugs-ds-liferay" inheritall="no"/>
		<antcall target="-findbugs-ds-test" inheritall="no"/>
		<antcall target="-findbugs-webapp" inheritall="no"/>
	</target>
	
	<target name="-findbugs-common" depends="-package-common-jar">
		<property name="findbugs.outputfile" value="findbugs-common.xml"/>
		<property name="findbugs.acp.refid" value="common-classpath"/>
		<property name="findbugs.sourcepath" value="${dir.common}/src"/>
		<property name="findbugs.target" value="${file.common.jar}"/>
		<antcall target="-findbugs-shared-target" inheritall="yes"/>
	</target>
	
	<target name="-findbugs-ds-liferay" depends="-package-ds-liferay-jar">
		<property name="findbugs.outputfile" value="findbugs-ds-liferay.xml"/>
		<property name="findbugs.acp.refid" value="ds-liferay-classpath"/>
		<property name="findbugs.sourcepath" value="${dir.ds.liferay}/src"/>
		<property name="findbugs.target" value="${file.ds.liferay.jar}"/>
		<antcall target="-findbugs-shared-target" inheritall="yes"/>
	</target>
	
	<target name="-findbugs-ds-test" depends="-package-ds-test-jar">
		<property name="findbugs.outputfile" value="findbugs-ds-test.xml"/>
		<property name="findbugs.acp.refid" value="ds-test-classpath"/>
		<property name="findbugs.sourcepath" value="${dir.ds.test}/src"/>
		<property name="findbugs.target" value="${file.ds.test.jar}"/>
		<antcall target="-findbugs-shared-target" inheritall="yes"/>
	</target>
	
	<target name="-findbugs-webapp" depends="-package-webapp-jar">
		<property name="findbugs.outputfile" value="findbugs-webapp.xml"/>
		<property name="findbugs.acp.refid" value="webapp-classpath"/>
		<property name="findbugs.sourcepath" value="${dir.webapp}/src"/>
		<property name="findbugs.target" value="${file.webapp.jar}"/>
		<antcall target="-findbugs-shared-target" inheritall="yes"/>
	</target>
	
	<target name="-findbugs-shared-target">
		<findbugs home="${findbugs.home}" output="xml:withMessages" outputfile="${dir.build-artifacts}/${findbugs.outputfile}">
			<auxclasspath refid="${findbugs.acp.refid}"/>
			<sourcepath path="${findbugs.sourcepath}"/>
		 	<class location="${findbugs.target}"/>
		</findbugs>
	</target>
	
</project>
