<?xml version="1.0" encoding="UTF-8"?>
<project name="Tori">
	
	<loadproperties srcfile="build.properties"/>
	
	<property name="dir.project" value=".."/>
	<property name="dir.common" value="${dir.project}/common" />
	<property name="dir.webapp" value="${dir.project}/webapp" />
	<property name="dir.ds.test" value="${dir.project}/ds-test" />
	<property name="dir.ds.liferay" value="${dir.project}/ds-liferay" />
	
	<property name="dir.build-artifacts" value="artifacts" />
	<property name="dir.build-artifacts.common" value="${dir.build-artifacts}/common" />
	<property name="dir.build-artifacts.webapp" value="${dir.build-artifacts}/webapp" />
	<property name="dir.build-artifacts.widgetsets" value="${dir.build-artifacts}/widgetsets" />
	<property name="dir.build-artifacts.ds.liferay" value="${dir.build-artifacts}/ds-liferay" />
	<property name="dir.build-artifacts.ds.test" value="${dir.build-artifacts}/ds-test" />
	
	<property name="dir.meta-inf" value="${dir.webapp}/src/main/webapp/META-INF" />
	<property name="dir.web-inf" value="${dir.webapp}/src/main/webapp/WEB-INF" />
	<property name="dir.web-inf.lib" value="${dir.web-inf}/lib" />
	
	<property name="file.vaadin.jar" value="${dir.web-inf.lib}/${vaadin.jar}" />
	<property name="file.common.jar" value="${dir.build-artifacts}/common.jar" />
	<property name="file.webapp.jar" value="${dir.build-artifacts}/webapp.jar" />
	<property name="file.ds.liferay.jar" value="${dir.build-artifacts}/ds-liferay.jar" />
	<property name="file.ds.test.jar" value="${dir.build-artifacts}/ds-test.jar" />
	<property name="file.servlet-api.jar" value="build-libs/servlet-api.jar" />
	
	<property name="file.tori.liferay.war" value="${dir.build-artifacts}/tori-liferay.war" />
	<property name="file.tori.test.war" value="${dir.build-artifacts}/tori-test.war" />

	<path id="common-classpath">
		<fileset dir="${dir.common}/lib">
		    <include name="*.jar" />
		</fileset>
	</path>
	
	<path id="webapp-classpath">
		<path refid="common-classpath"/>
		<pathelement location="${file.common.jar}"/>
		<pathelement location="${file.servlet-api.jar}"/>
		<fileset dir="${dir.web-inf.lib}" includes="**/*.jar"/>
	</path>

	<path id="ds-liferay-classpath">
		<path refid="common-classpath"/>
		<pathelement location="${file.common.jar}"/>
	</path>

	<path id="ds-test-classpath">
		<path refid="common-classpath"/>
		<pathelement location="${file.common.jar}"/>
	</path>

	<target name="clean">
		<delete dir="${dir.build-artifacts}"/>
	</target>

	
	<target name="-package-common-jar">
		<mkdir dir="${dir.build-artifacts.common}"/>
    	<javac srcdir="${dir.common}/src/main"
         	destdir="${dir.build-artifacts.common}"
    		classpathref="common-classpath"
         	debug="on"
    		includeantruntime="false"
		/>
		<jar destfile="${file.common.jar}"
			basedir="${dir.build-artifacts.common}"
		/>
	</target>
	
	
    <target name="-package-webapp-jar" depends="-package-common-jar, -package-ds-test-jar">
    	<mkdir dir="${dir.build-artifacts.webapp}"/>
    	<javac srcdir="${dir.webapp}/src/main"
         	destdir="${dir.build-artifacts.webapp}"
    		classpathref="webapp-classpath"
         	debug="on"
			includeantruntime="false"
		/>
		<jar destfile="${file.webapp.jar}"
			basedir="${dir.build-artifacts.webapp}"
		/>
    </target>
	
    <target name="-package-ds-liferay-jar" depends="-package-common-jar">
    	<mkdir dir="${dir.build-artifacts.ds.liferay}"/>
    	<javac srcdir="${dir.ds.liferay}/src/main"
         	destdir="${dir.build-artifacts.ds.liferay}"
    		classpathref="ds-liferay-classpath"
         	debug="on"
    		includeantruntime="false"
		/>
		<jar destfile="${file.ds.liferay.jar}"
			basedir="${dir.build-artifacts.ds.liferay}"
		/>
    </target>

    <target name="-package-ds-test-jar" depends="-package-common-jar">
    	<mkdir dir="${dir.build-artifacts.ds.test}"/>
    	<javac srcdir="${dir.ds.test}/src/main"
         	destdir="${dir.build-artifacts.ds.test}"
    		classpathref="ds-test-classpath"
         	debug="on"
    		includeantruntime="false"
		/>
		<jar destfile="${file.ds.test.jar}"
			basedir="${dir.build-artifacts.ds.test}"
		/>
    </target>

	<target name="package-liferay-war" depends="-check-widgetset-dependency, -package-webapp-jar, -package-ds-liferay-jar">
		<war destfile="${file.tori.liferay.war}" webxml="${dir.web-inf}/web.xml" manifest="${dir.meta-inf}/MANIFEST.MF">
			<webinf dir="${dir.web-inf}"/>
			<metainf dir="${dir.meta-inf}"/>
			<lib dir="${dir.web-inf.lib}" includes="*.jar"/>
			<lib dir="${dir.build-artifacts}" includes="*.jar"/>
			<zipfileset dir="${dir.build-artifacts.widgetsets}"
				includes="org.*"
				prefix="VAADIN/widgetsets"
			/>
		</war>
	</target>
	
	<target name="package-test-war" depends="-check-widgetset-dependency, -package-webapp-jar, -package-ds-test-jar">
		<war destfile="${file.tori.test.war}" webxml="${dir.web-inf}/web.xml" manifest="${dir.meta-inf}/MANIFEST.MF">
			<webinf 
				dir="${dir.web-inf}"
				excludes="liferay-*, portlet.xml"
			/>
			<metainf dir="${dir.meta-inf}"/>
			<lib dir="${dir.web-inf.lib}" includes="*.jar"/>
			<lib dir="${dir.build-artifacts}" includes="*.jar"/>
			<zipfileset dir="${dir.build-artifacts.widgetsets}"
				includes="org.*"
				prefix="VAADIN/widgetsets"
			/>
		</war>
	</target>
	
	<target name="-check-widgetset-dependency">
		<available file="${dir.build-artifacts.widgetsets}" property="widgetsetIsPresent" />
		<fail 
			unless="widgetsetIsPresent"
			message="No compiled widgetset artifact was found in ${dir.build-artifacts.widgetsets}. Try running 'compile-widgetset' first."
		/>
	</target>
	
	<!-- WIDGETSET COMPILATION STUFF! -->
	<!-- Ignore, mostly.              -->
	
	<target name="-configure">
		
		<!-- Path from this file to the project root -->
		<property name="base" 
			      value="${dir.webapp}" />
		
		<!-- Location of GWT distribution -->
		<property name="gwt-location" 
			      value="build-libs" />
		
		<!-- Location of Vaadin JAR -->
		<property name="vaadin-jar-location" 
			      value="${file.vaadin.jar}" />
		
		<!-- Location of project source code -->
		<property name="src-location" 
			      value="${dir.webapp}/src/main/java" />

		<!-- Target where to compile server-side classes -->
		<property name="server-side-destination" 
			      value="${dir.build-artifacts.webapp}"/>
		
		<!-- Target where to compile the widget set -->
		<property name="client-side-destination" 
			      value="${dir.build-artifacts.widgetsets}" />
	</target>
		
    <!-- NOTE: Modify this example to compile your own widgetset -->
    <target name="-configure-widgetset">
        <!-- Name of the widget set -->
        <property name="widgetset" value="org.vaadin.tori.widgetset.ToriWidgetset"/>

        <!-- Path to the widgetset directory. Required only for --> 
    	<!-- generated widget sets. Must be relative to         --> 
    	<!-- $src-location, that is, under the first entry in   --> 
    	<!--  class path.                                       --> 
        <property name="widgetset-path" value="org/vaadin/tori/widgetset"/>
    </target>

	<!-- ================================================== -->
	<!-- Build Targets                                      -->
    <!-- ================================================== -->
	
	<target name="-init" depends="-configure">

		<echo>Requirements for classpath:</echo>
		<echo>  ${gwt-location}/gwt-dev.jar</echo>
		<echo>  ${gwt-location}/gwt-user.jar</echo>
		<echo>  ${vaadin-jar-location}</echo>
		<echo>  ${src-location}</echo>
		<echo>Output will be written into ${client-side-destination}</echo>

		<!-- Check that files exist -->
		<fail message="Some of the required files (listed above) are missing.">
			<condition><not><resourcecount count="3">
				<filelist files="${gwt-location}/gwt-dev.jar,${gwt-location}/gwt-user.jar,${vaadin-jar-location}"/>
			</resourcecount></not></condition>
		</fail>

		<!-- Construct and check classpath -->
		<!-- Includes paths required for both server and client-side compilation -->
		<path id="compile.classpath">
			<!-- The source location must be first, as required by generate-widgetset. -->
            <pathelement path="${src-location}" />
			<pathelement path="${server-side-destination}" />
			<pathelement path="${vaadin-jar-location}" />
			<pathelement path="${gwt-location}/gwt-dev.jar"/>
			<pathelement path="${gwt-location}/gwt-user.jar"/>
			<pathelement path="${gwt-location}/validation-api-1.0.0.GA.jar"/>
			<pathelement path="${gwt-location}/validation-api-1.0.0.GA-sources.jar"/>
		    <fileset dir="${dir.web-inf.lib}">
		    	<include name="*.jar"/>
		     </fileset>
		</path>
	</target>

	<!-- Build the widget set. -->
	<target name="compile-widgetset" depends="-init, -configure-widgetset, -package-webapp-jar">
		<echo >Compiling ${widgetset}...</echo>
		<java classname="com.google.gwt.dev.Compiler"
			  failonerror="yes" fork="yes" maxmemory="256m">
			<arg value="-war" />
			<arg value="${client-side-destination}" />
			<arg value="${widgetset}" />
			<arg value="-localWorkers" />
			<arg value="4" />
            <jvmarg value="-Xss1024k"/>
            <jvmarg value="-Djava.awt.headless=true"/>
			<classpath>
				<path refid="compile.classpath"/>
			</classpath>
		</java>
	</target>
	
	
</project>
